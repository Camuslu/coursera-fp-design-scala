[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.3 (Microsoft Java 11.0.13-experimental)
[debug] Load.defaultLoad until apply took 173.280083ms
[debug]           Load.loadUnit: plugins took 34.608958ms
[debug]           Load.loadUnit: defsScala took 0.143334ms
[debug] [Loading] Scanning directory /Users/tlu/git_proj/codecs/project
[debug]             Load.loadUnit: mkEval took 3.88775ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/tlu/git_proj/codecs/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.884834 ms
[info] loading settings for project codecs-build from buildSettings.sbt,plugins.sbt ...
[debug]               Load.resolveProject(codecs-build) took 27.271833ms
[debug]             Load.loadTransitive: finalizeProject(Project(id codecs-build, base: /Users/tlu/git_proj/codecs/project, plugins: List(<none>))) took 44.062708ms
[debug] [Loading] Done in /Users/tlu/git_proj/codecs/project, returning: (codecs-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1781.719334ms
[debug]           Load.loadUnit: cleanEvalClasses took 248.994792ms
[debug]         Load.loadUnit(file:/Users/tlu/git_proj/codecs/project/, ...) took 2068.026833ms
[debug]       Load.apply: load took 2136.482292ms
[debug]       Load.apply: resolveProjects took 2.093958ms
[debug]       Load.apply: finalTransforms took 24.914292ms
[debug]       Load.apply: config.delegates took 2.484125ms
[debug]       Load.apply: Def.make(settings)... took 199.131333ms
[debug]       Load.apply: structureIndex took 38.515042ms
[debug]       Load.apply: mkStreams took 0.790292ms
[info] loading project definition from /Users/tlu/git_proj/codecs/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 2 Scala sources to /Users/tlu/git_proj/codecs/project/target/scala-2.12/sbt-1.0/classes ...
[info] Non-compiled module 'compiler-bridge_2.12' for Scala 2.12.14. Compiling...
[info]   Compilation completed in 4.626s.
[info] done compiling
[debug]     Load.loadUnit: plugins took 9134.343041ms
[debug]     Load.loadUnit: defsScala took 0.001625ms
[debug] [Loading] Scanning directory /Users/tlu/git_proj/codecs
[debug]       Load.loadUnit: mkEval took 0.123916ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/tlu/git_proj/codecs, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(ch.epfl.lamp.StudentTasks), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.MOOCSettings),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.StudentTasks),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.StudentTasks),Set(Atom(ch.epfl.lamp.MOOCSettings)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,ch.epfl.lamp.StudentTasks,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,ch.epfl.lamp.MOOCSettings,sbt.plugins.JvmPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.916125 ms
[info] loading settings for project codecs from assignment.sbt,build.sbt ...
[debug]         Load.resolveProject(codecs) took 4.591167ms
[debug]       Load.loadTransitive: finalizeProject(Project(id codecs, base: /Users/tlu/git_proj/codecs, plugins: List(<none>))) took 6.103167ms
[debug] [Loading] Done in /Users/tlu/git_proj/codecs, returning: (codecs)
[debug]     Load.loadUnit: loadedProjectsRaw took 700.218375ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.282417ms
[debug]   Load.loadUnit(file:/Users/tlu/git_proj/codecs/, ...) took 9838.468875ms
[debug] Load.apply: load took 9846.408542ms
[debug] Load.apply: resolveProjects took 0.061167ms
[debug] Load.apply: finalTransforms took 6.675792ms
[debug] Load.apply: config.delegates took 0.242458ms
[debug] Load.apply: Def.make(settings)... took 360.232417ms
[debug] Load.apply: structureIndex took 14.178833ms
[debug] Load.apply: mkStreams took 0.002167ms
[info] set current project to progfun2-codecs (in build file:/Users/tlu/git_proj/codecs/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/tlu/.sbt/1.0/server/7de4debd1db0a86aaef2/sock
[debug] Writing bsp connection file
[info] started sbt server
[info] shutting down sbt server
